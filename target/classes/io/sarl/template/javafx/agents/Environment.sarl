/** 
 * 
 */
package io.sarl.template.javafx.agents

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.template.javafx.Controller.Controller
import io.sarl.template.javafx.^event.ReturnPerception
import io.sarl.core.Schedules
import io.sarl.template.javafx.^event.Perception
import java.util.Collections
import io.sarl.template.javafx.Model.Configuration

/** 
 * @author Luka Lambalot
 * 
 */
agent Environment {
	uses Logging, Lifecycle, DefaultContextInteractions, Schedules

	var controller : Controller
	var configuration : Configuration
	
		 
	on Initialize {
		// Event trigger before the agent begin to live or to be used.
		// You should put all the initialization statements in this block of code.
		info("The agent was started.")
		
		controller = Controller.getInstance
		while (controller.startAgent == false) {
			Thread::sleep(50)
			// Can be better imo
		}
		Thread::sleep(50)
		// controller.createRandomConfiguration // for testing purpose
		// controller.configuration.setupCars(5)
		var roads = controller.configuration.roads
		System.out.println("road: " + roads)
		for(road : roads) {
			for (coord : road.coordsList) {
				for(car : coord.carList) {
					// pour chaque voiture on spawn un agent voiture
					// apres defaultcontext on met nos arg
					spawnInContextWithID(typeof(CarAgent), car.UUID, defaultContext, road)
				}
			}
		}
		// every(500)[startSimulationStep]
		startSimulationStep
		
	}
	
	
	
	on ReturnPerception {
		info("i : " + occurrence.i)
		info("id : " + occurrence.id)
		info("next coordinate available ?  : " + occurrence.numberOfFreeCoord)
		
	}
	
	
	def startSimulationStep {
		var roads = Collections.synchronizedList(controller.configuration.roads)
		for (road : roads) {
			for (coord : road.coordsList) {
				for (car : coord.carList) {
					// pour chaque voiture on spawn un agent voiture
					// apres defaultcontext on met nos arg
					var perception = new Perception(road)
					emit(perception)[it.UUID == car.UUID]
				}
			}
		}
	}
	
	
	
	

	
}
